// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class FFGetBalanceRequest;
@class FFGetBalanceRequestBuilder;
@class FFGetBalanceResponse;
@class FFGetBalanceResponseAccountBalance;
@class FFGetBalanceResponseAccountBalanceBuilder;
@class FFGetBalanceResponseBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, FFAccountType) {
  FFAccountTypeChecking = 0,
  FFAccountTypeSavings = 1,
};

BOOL FFAccountTypeIsValidValue(FFAccountType value);


@interface FFExampleRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface FFGetBalanceRequest : PBGeneratedMessage {
@private
  BOOL hasIncludeAllAccounts_:1;
  BOOL hasUserId_:1;
  BOOL includeAllAccounts_:1;
  NSString* userId;
}
- (BOOL) hasUserId;
- (BOOL) hasIncludeAllAccounts;
@property (readonly, strong) NSString* userId;
- (BOOL) includeAllAccounts;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FFGetBalanceRequestBuilder*) builder;
+ (FFGetBalanceRequestBuilder*) builder;
+ (FFGetBalanceRequestBuilder*) builderWithPrototype:(FFGetBalanceRequest*) prototype;
- (FFGetBalanceRequestBuilder*) toBuilder;

+ (FFGetBalanceRequest*) parseFromData:(NSData*) data;
+ (FFGetBalanceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FFGetBalanceRequest*) parseFromInputStream:(NSInputStream*) input;
+ (FFGetBalanceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FFGetBalanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FFGetBalanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

+ (FFGetBalanceRequest*) parseFromDict:(id) dict;

- (NSDictionary*) toDict;
// @@protoc_insertion_point(FFGetBalanceRequest)

@end

@interface FFGetBalanceRequestBuilder : PBGeneratedMessageBuilder {
@private
  FFGetBalanceRequest* resultGetBalanceRequest;
}

- (FFGetBalanceRequest*) defaultInstance;

- (FFGetBalanceRequestBuilder*) clear;
- (FFGetBalanceRequestBuilder*) clone;

- (FFGetBalanceRequest*) build;
- (FFGetBalanceRequest*) buildPartial;

- (FFGetBalanceRequestBuilder*) mergeFrom:(FFGetBalanceRequest*) other;
- (FFGetBalanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FFGetBalanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (FFGetBalanceRequestBuilder*) setUserId:(NSString*) value;
- (FFGetBalanceRequestBuilder*) clearUserId;

- (BOOL) hasIncludeAllAccounts;
- (BOOL) includeAllAccounts;
- (FFGetBalanceRequestBuilder*) setIncludeAllAccounts:(BOOL) value;
- (FFGetBalanceRequestBuilder*) clearIncludeAllAccounts;
@end

@interface FFGetBalanceResponse : PBGeneratedMessage {
@private
  BOOL hasTotalBalance_:1;
  BOOL hasPrimaryAccount_:1;
  BOOL hasBuf_:1;
  Float64 totalBalance;
  FFGetBalanceResponseAccountBalance* primaryAccount;
  NSData* buf;
  PBAppendableArray * idsArray;
  NSMutableArray * namesArray;
  NSMutableArray * balancesArray;
}
- (BOOL) hasPrimaryAccount;
- (BOOL) hasTotalBalance;
- (BOOL) hasBuf;
@property (readonly, strong) FFGetBalanceResponseAccountBalance* primaryAccount;
@property (readonly) Float64 totalBalance;
@property (readonly, strong) NSArray * names;
@property (readonly, strong) PBArray * ids;
@property (readonly, strong) NSArray * balances;
@property (readonly, strong) NSData* buf;
- (NSString*)namesAtIndex:(NSUInteger)index;
- (SInt32)idsAtIndex:(NSUInteger)index;
- (FFGetBalanceResponseAccountBalance*)balancesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FFGetBalanceResponseBuilder*) builder;
+ (FFGetBalanceResponseBuilder*) builder;
+ (FFGetBalanceResponseBuilder*) builderWithPrototype:(FFGetBalanceResponse*) prototype;
- (FFGetBalanceResponseBuilder*) toBuilder;

+ (FFGetBalanceResponse*) parseFromData:(NSData*) data;
+ (FFGetBalanceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FFGetBalanceResponse*) parseFromInputStream:(NSInputStream*) input;
+ (FFGetBalanceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FFGetBalanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FFGetBalanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

+ (FFGetBalanceResponse*) parseFromDict:(id) dict;

- (NSDictionary*) toDict;
// @@protoc_insertion_point(FFGetBalanceResponse)

@end

@interface FFGetBalanceResponseAccountBalance : PBGeneratedMessage {
@private
  BOOL hasBalance_:1;
  BOOL hasAccountType_:1;
  Float64 balance;
  FFAccountType accountType;
}
- (BOOL) hasAccountType;
- (BOOL) hasBalance;
@property (readonly) FFAccountType accountType;
@property (readonly) Float64 balance;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FFGetBalanceResponseAccountBalanceBuilder*) builder;
+ (FFGetBalanceResponseAccountBalanceBuilder*) builder;
+ (FFGetBalanceResponseAccountBalanceBuilder*) builderWithPrototype:(FFGetBalanceResponseAccountBalance*) prototype;
- (FFGetBalanceResponseAccountBalanceBuilder*) toBuilder;

+ (FFGetBalanceResponseAccountBalance*) parseFromData:(NSData*) data;
+ (FFGetBalanceResponseAccountBalance*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FFGetBalanceResponseAccountBalance*) parseFromInputStream:(NSInputStream*) input;
+ (FFGetBalanceResponseAccountBalance*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FFGetBalanceResponseAccountBalance*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FFGetBalanceResponseAccountBalance*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

+ (FFGetBalanceResponseAccountBalance*) parseFromDict:(id) dict;

- (NSDictionary*) toDict;
// @@protoc_insertion_point(FFGetBalanceResponseAccountBalance)

@end

@interface FFGetBalanceResponseAccountBalanceBuilder : PBGeneratedMessageBuilder {
@private
  FFGetBalanceResponseAccountBalance* resultAccountBalance;
}

- (FFGetBalanceResponseAccountBalance*) defaultInstance;

- (FFGetBalanceResponseAccountBalanceBuilder*) clear;
- (FFGetBalanceResponseAccountBalanceBuilder*) clone;

- (FFGetBalanceResponseAccountBalance*) build;
- (FFGetBalanceResponseAccountBalance*) buildPartial;

- (FFGetBalanceResponseAccountBalanceBuilder*) mergeFrom:(FFGetBalanceResponseAccountBalance*) other;
- (FFGetBalanceResponseAccountBalanceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FFGetBalanceResponseAccountBalanceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountType;
- (FFAccountType) accountType;
- (FFGetBalanceResponseAccountBalanceBuilder*) setAccountType:(FFAccountType) value;
- (FFGetBalanceResponseAccountBalanceBuilder*) clearAccountType;

- (BOOL) hasBalance;
- (Float64) balance;
- (FFGetBalanceResponseAccountBalanceBuilder*) setBalance:(Float64) value;
- (FFGetBalanceResponseAccountBalanceBuilder*) clearBalance;
@end

@interface FFGetBalanceResponseBuilder : PBGeneratedMessageBuilder {
@private
  FFGetBalanceResponse* resultGetBalanceResponse;
}

- (FFGetBalanceResponse*) defaultInstance;

- (FFGetBalanceResponseBuilder*) clear;
- (FFGetBalanceResponseBuilder*) clone;

- (FFGetBalanceResponse*) build;
- (FFGetBalanceResponse*) buildPartial;

- (FFGetBalanceResponseBuilder*) mergeFrom:(FFGetBalanceResponse*) other;
- (FFGetBalanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FFGetBalanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrimaryAccount;
- (FFGetBalanceResponseAccountBalance*) primaryAccount;
- (FFGetBalanceResponseBuilder*) setPrimaryAccount:(FFGetBalanceResponseAccountBalance*) value;
- (FFGetBalanceResponseBuilder*) setPrimaryAccountBuilder:(FFGetBalanceResponseAccountBalanceBuilder*) builderForValue;
- (FFGetBalanceResponseBuilder*) mergePrimaryAccount:(FFGetBalanceResponseAccountBalance*) value;
- (FFGetBalanceResponseBuilder*) clearPrimaryAccount;

- (BOOL) hasTotalBalance;
- (Float64) totalBalance;
- (FFGetBalanceResponseBuilder*) setTotalBalance:(Float64) value;
- (FFGetBalanceResponseBuilder*) clearTotalBalance;

- (NSMutableArray *)names;
- (NSString*)namesAtIndex:(NSUInteger)index;
- (FFGetBalanceResponseBuilder *)addNames:(NSString*)value;
- (FFGetBalanceResponseBuilder *)setNamesArray:(NSArray *)array;
- (FFGetBalanceResponseBuilder *)clearNames;

- (PBAppendableArray *)ids;
- (SInt32)idsAtIndex:(NSUInteger)index;
- (FFGetBalanceResponseBuilder *)addIds:(SInt32)value;
- (FFGetBalanceResponseBuilder *)setIdsArray:(NSArray *)array;
- (FFGetBalanceResponseBuilder *)setIdsValues:(const SInt32 *)values count:(NSUInteger)count;
- (FFGetBalanceResponseBuilder *)clearIds;

- (NSMutableArray *)balances;
- (FFGetBalanceResponseAccountBalance*)balancesAtIndex:(NSUInteger)index;
- (FFGetBalanceResponseBuilder *)addBalances:(FFGetBalanceResponseAccountBalance*)value;
- (FFGetBalanceResponseBuilder *)setBalancesArray:(NSArray *)array;
- (FFGetBalanceResponseBuilder *)clearBalances;

- (BOOL) hasBuf;
- (NSData*) buf;
- (FFGetBalanceResponseBuilder*) setBuf:(NSData*) value;
- (FFGetBalanceResponseBuilder*) clearBuf;
@end


@interface FFBank : NSObject

@property (readonly) NSString *address;

+ (FFBank *)newInstance:(NSString *)address;

- (id)initWithAddress:(NSString *)address;

- (void)getBalanceCall:(FFGetBalanceRequest *)request userId:(NSString *)userId done:(void (^)(NSError *err, FFGetBalanceResponse *response))callback;

@end

// @@protoc_insertion_point(global_scope)
